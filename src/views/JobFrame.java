/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import view.*;
import controllers.JobController;
import icontrollers.IJobController;
import java.awt.Component;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import models.Job;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import tools.Koneksi;

/**
 *
 * @author Bella
 */
public class JobFrame extends javax.swing.JInternalFrame {

    Koneksi koneksi = new Koneksi();
    IJobController ijc = (IJobController) new JobController(koneksi.getConnection());
    private DefaultTableModel tabjob;
    JasperDesign JasDes;
    JasperReport JasRep;
    JasperPrint JasPri;
    
    Map param = new HashMap();
    File All = new File ("AllJobs.jrxml");
    File byId = new File ("AllJobsByJobId.jrxml");
    /**
     * Creates new form JobFrame
     */
    public JobFrame() {
        initComponents();
        tabjob = new DefaultTableModel();
        tblJob.setModel(tabjob);
        tabjob.addColumn("ID");
        tabjob.addColumn("Title");
        tabjob.addColumn("Min Salary");
        tabjob.addColumn("Max Salary");
        
        getDataJob();
    }
    
    public void ColumnAdjuser()
    {
        for (int column = 0; column < tblJob.getColumnCount(); column++)
        {
            TableColumn tableColumn = tblJob.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();
            for (int row = 0; row < tblJob.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = tblJob.getCellRenderer(row, column);
                Component c = tblJob.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + tblJob.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);
                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }
            tableColumn.setPreferredWidth( preferredWidth );
        }
    }
    
    public void getDataJob(){
        //mengosongkan textfiled id dan name
        resetField();
        
        //menghapus isi table region
        tabjob.getDataVector().removeAllElements();
        tabjob.fireTableDataChanged();
        //memanggil list data tabel region dari database
        for (Job j : ijc.getAll()) {
            Object[] obj = new Object[4];
            obj[0] = j.getId();
            obj[1] = j.getTitle();
            obj[2] = j.getMin();
            obj[3] = j.getMax();
            tabjob.addRow(obj);
        }
        ColumnAdjuser();
    }
    
    public void resetField(){
        txtId.setText("");
        txtTitle.setText("");
        txtMinSalary.setText("");
        txtMaxSalary.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        cbSearch = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJob = new javax.swing.JTable();
        txtId = new javax.swing.JTextField();
        Label_Id = new javax.swing.JLabel();
        Label_Name = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        Label_Name1 = new javax.swing.JLabel();
        Label_Id1 = new javax.swing.JLabel();
        txtMinSalary = new javax.swing.JTextField();
        txtMaxSalary = new javax.swing.JTextField();

        setTitle("Jobs Form");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Title" }));
        cbSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbSearchMouseClicked(evt);
            }
        });
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        tblJob.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblJob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblJobMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblJob);

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        Label_Id.setText("Id");

        Label_Name.setText("Title");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        Label_Name1.setText("Max Salary");

        Label_Id1.setText("Min Salary");

        txtMinSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinSalaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInsert)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrint)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Label_Name)
                                    .addComponent(Label_Id))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_Id1)
                            .addComponent(Label_Name1))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMinSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(txtMaxSalary))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Id)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Name)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Id1)
                    .addComponent(txtMinSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Name1)
                    .addComponent(txtMaxSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnPrint))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String filter=(String)cbSearch.getSelectedItem();
        String val=txtSearch.getText();
        switch (filter){
            case "Id":
            //System.out.println("id" +filter);

            if(val.isEmpty()){
                getDataJob();
            }else{
                getDataJob();
                tabjob.getDataVector().removeAllElements();
                for (Job j : ijc.getById(val)) {
                    Object[] obj = new Object[4];
                    obj[0] = j.getId();
                    obj[1] = j.getTitle();
                    obj[2] = j.getMin();
                    obj[3] = j.getMax();
                    tabjob.addRow(obj);
                }
            }
            break;
            case "Title":
            try {
                //System.out.println("name" +filter);
                if(val.isEmpty()){
                    getDataJob();
                }else{
                    getDataJob();
                    tabjob.getDataVector().removeAllElements();
                    for (Job j : ijc.getByTitle(val)) {
                        Object[] obj = new Object[4];
                        obj[0] = j.getId();
                        obj[1] = j.getTitle();
                        obj[2] = j.getMin();
                        obj[3] = j.getMax();
                        tabjob.addRow(obj);
                    }
                }

            } catch (Exception e) {
                System.out.println(e.getMessage());
                e.printStackTrace();
            }
            break;
            default:
            break;
        }

        /*
        //menampilkan hasil pencarian secara umum tanpa parameter
        String val=Search_Text.getText();
        if(val.isEmpty()){
            getDataRegion();
        }else{
            getDataRegion();
            tabregion.getDataVector().removeAllElements();
            for (Region r : irc.search(val)) {
                Object[] obj = new Object[2];
                obj[0] = r.getId();
                obj[1] = r.getName();
                tabregion.addRow(obj);
            }
        }
        */
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cbSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbSearchMouseClicked

    }//GEN-LAST:event_cbSearchMouseClicked

    private void tblJobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblJobMouseClicked
        tabjob = (DefaultTableModel) tblJob.getModel();
        int i = tblJob.getSelectedRow();
        txtId.setText(tabjob.getValueAt(i, 0).toString());
        txtTitle.setText(tabjob.getValueAt(i, 1).toString());
        txtMinSalary.setText(tabjob.getValueAt(i, 2).toString());
        txtMaxSalary.setText(tabjob.getValueAt(i, 3).toString());
        txtId.setEditable(false);
        btnInsert.setEnabled(false);
    }//GEN-LAST:event_tblJobMouseClicked

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        if (txtId.getText().isEmpty()||txtTitle.getText().isEmpty()||txtMinSalary.getText().isEmpty()||txtMaxSalary.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mohon Mengisi Data Secara Lengkap!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            resetField();
        }
        else{
            ijc.insert(txtId.getText(), txtTitle.getText(), txtMinSalary.getText(), txtMaxSalary.getText());
            getDataJob();
            JOptionPane.showMessageDialog(rootPane, "Data Berhasil Disimpan", "Saved", JOptionPane.INFORMATION_MESSAGE);
        }
        txtId.setEditable(true);
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtTitle.getText().isEmpty()||txtMinSalary.getText().isEmpty()||txtMaxSalary.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mohon Mengisi Data Secara Lengkap!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }else{
            ijc.update(txtId.getText(), txtTitle.getText(), txtMinSalary.getText(), txtMaxSalary.getText());
            JOptionPane.showMessageDialog(rootPane, "Data Berhasil Diperbaharui", "Updated", JOptionPane.INFORMATION_MESSAGE);
            getDataJob();
            txtId.setEditable(true);
            btnInsert.setEnabled(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        tabjob = (DefaultTableModel) tblJob.getModel();
        int i = tblJob.getSelectedRow();

        if (i==-1){
            JOptionPane.showMessageDialog(rootPane, "Mohon Memilih Baris Data!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else {

            String del = tblJob.getModel().getValueAt(i, 0).toString();
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Yakin Akan Menghapus Data ", "Delete", dialogButton);
            if(dialogResult == 0){
                ijc.delete(del);
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Dihapus", "Deleted", JOptionPane.INFORMATION_MESSAGE);
                getDataJob();
                txtId.setEditable(true);
                btnInsert.setEnabled(true);
            }else{
                getDataJob();
                txtId.setEditable(true);
                btnInsert.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
/*
        try {
            if (txtSearch.getText().isEmpty()) {
                JasDes = JRXmlLoader.load(All);
                param.clear();
            }else if  ( cbSearch.getSelectedItem()=="Id"){
                JasDes = JRXmlLoader.load(byId);
                param.put("REGION_ID",Integer.parseInt(txtSearch.getText()));
            }
            else if (cbSearch.getSelectedItem()=="Name"){
                JasDes = JRXmlLoader.load(byName);
                param.put("REGION_NAME",String.valueOf(txtSearch.getText()));
                System.out.println(cbSearch.getSelectedItem());
                System.out.println(txtSearch.getText());
            }

            JasRep = JasperCompileManager.compileReport(JasDes);
            JasPri = JasperFillManager.fillReport(JasRep, param, koneksi.getConnection());
            JasperViewer.viewReport(JasPri, false);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }*/
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txtMinSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinSalaryActionPerformed

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label_Id;
    private javax.swing.JLabel Label_Id1;
    private javax.swing.JLabel Label_Name;
    private javax.swing.JLabel Label_Name1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblJob;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMaxSalary;
    private javax.swing.JTextField txtMinSalary;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
